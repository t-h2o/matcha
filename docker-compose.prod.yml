services:
  angular:
    container_name: angular-prod
    image: matcha/prod-angular
    build:
      context: ./frontend/
      dockerfile: Dockerfile.prod
    ports:
      - '80:80'
    volumes:
      - uploads:/usr/share/nginx/uploads
    depends_on:
      - flask
    networks:
      - appnet

  flask:
    container_name: flask-prod
    image: matcha/prod-flask
    build:
      context: ./backend/
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    ports:
      - '5001:5000'
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    command: gunicorn --worker-class eventlet -w 1 --bind 0.0.0.0:5000 matcha:app
    depends_on:
      - postgres
    networks:
      - appnet

  postgres:
    container_name: postgres-prod
    image: postgres:latest
    volumes:
      - data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${PROD_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PROD_POSTGRES_PASSWORD}
      - POSTGRES_DB=${PROD_POSTGRES_NAME}
    ports:
      - '5432:5432'
    networks:
      - appnet

  mail:
    container_name: mail-dev
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
        - appnet

volumes:
  data:
    name: postgres-volume-prod
  uploads:
    name: uploads-volume-prod

networks:
  appnet: